<!DOCTYPE html>
<html>
<head>
    <title>Grants Map</title>
    <meta charset="utf-8" />
    <link href='https://api.mapbox.com/mapbox.js/v3.2.1/mapbox.css' rel='stylesheet' />
    {# <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.5.1/leaflet.css" 
          integrity="sha256-SHMGCYmST46SoyGgo4YR/9AlK1vf3ff84Aq9yK4hdqM=" crossorigin="anonymous" /> #}
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/leaflet.markercluster/1.4.1/MarkerCluster.css" 
          integrity="sha256-+bdWuWOXMFkX0v9Cvr3OWClPiYefDQz9GGZP/7xZxdc=" crossorigin="anonymous" />
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/leaflet.markercluster/1.4.1/MarkerCluster.Default.css" 
          integrity="sha256-LWhzWaQGZRsWFrrJxg+6Zn8TT84k0/trtiHBc6qcGpY=" crossorigin="anonymous" />
    <link rel="stylesheet" href="{{ url_for('static', filename='css/leaflet.groupedlayercontrol.css')}}" />
    <style>
        body {
            padding: 0;
            margin: 0;
        }
        html, body, #map {
            height: 100%;
            width: 100%;
        }

        /* markercluster groups */
        .marker-cluster-small,
        .marker-cluster-small div {
            background-color: #cddc2b;
        }
        .marker-cluster-medium,
        .marker-cluster-medium div {
            background-color: #f48320;
            color: #fff;
        }
        .marker-cluster-large,
        .marker-cluster-large div {
            background-color: #9c2061;
            color: #fff;
        }
    </style>
</head>
<body>
    <div id="map"></div>

    <script src='https://api.mapbox.com/mapbox.js/v3.2.1/mapbox.js'></script>
    {# <script src="https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.5.1/leaflet.js" 
            integrity="sha256-EErZamuLefUnbMBQbsEqu1USa+btR2oIlCpBJbyD4/g=" crossorigin="anonymous"></script> #}
    <script src="https://cdnjs.cloudflare.com/ajax/libs/leaflet.markercluster/1.4.1/leaflet.markercluster.js" 
            integrity="sha256-WL6HHfYfbFEkZOFdsJQeY7lJG/E5airjvqbznghUzRw=" crossorigin="anonymous"></script>
    <script src="{{ url_for('static', filename='js/leaflet.groupedlayercontrol.js') }}"></script>

    <script>
        // Set up mapbox map
        L.mapbox.accessToken = {{mapbox_access_token|tojson}};
        var map = L.mapbox.map('map', null, {
            attributionControl: {compact: true},
        }).setView([-41.2858, 174.78682], 14);
        L.mapbox.styleLayer('mapbox://styles/davidkane/cjvnt2h0007hm1clrbd20bbug').addTo(map)

        // disable scroll when map isn't focused
        map.scrollWheelZoom.disable();
        map.on('focus', function() { map.scrollWheelZoom.enable(); });
        map.on('blur', function() { map.scrollWheelZoom.disable(); });

        // set up attribution for deprivation layer
        var deprivation_options = {
            opacity: 0.8,
            attribution: '<strong>Deprivation</strong>: <a href="https://www.gov.uk/government/statistics/english-indices-of-deprivation-2019" target="_blank">English Indices of Deprivation</a> (<a href="https://www.nationalarchives.gov.uk/doc/open-government-licence/version/3/">OGL</a>)<br>'
        }
        map.attributionControl.addAttribution(deprivation_options['attribution']);

        // ensure mapbox logo is shown (for attribution)
        document.querySelector('.mapbox-logo').classList.add('mapbox-logo-true');

        // set up attribution for boundary layer
        var boundary_attribution = '<br><strong>Boundaries</strong>: <a href="http://geoportal.statistics.gov.uk/" target="_blank">Office for National Statistics</a>  (<a href="https://www.nationalarchives.gov.uk/doc/open-government-licence/version/3/">OGL</a>)<br>' + 
                          'Contains OS data Â© Crown copyright and database right {{ current_year }}';

        // function for determining style of boundaries
        var boundary_options = function(style){
            var defaultStyle = {fillOpacity: 0.05, color: '#53aadd', opacity: 0.6, weight: 1};
            return {
                style: Object.assign({}, defaultStyle, style),
                attribution: boundary_attribution,
            }
        }
        // function for showing the name of an area
        var boundary_name_field = function(layer){
            var name_field = Object.keys(layer.feature.properties).find(el => el.endsWith("nm"));
            return layer.feature.properties[name_field];
        }

        // create the marker cluster object that will hold the markers
        var markers = L.markerClusterGroup({
            singleMarkerMode: true,
            polygonOptions: {
                color: '#53aadd'
            }
        });

        // dump the data to be used in the markers
        var geopoints = {{geo.values()|list|tojson}};

        // add each of the markers
        geopoints.forEach(function(g, index){
            markers.addLayer(
                L.marker([g.__geo_lat, g.__geo_long])
                 .bindPopup(`
                    <strong>From</strong> ${L.mapbox.sanitize(g["Funding Org:0:Name"])}<br>
                    <strong>To</strong> ${L.mapbox.sanitize(g["Recipient Org:0:Name"])}<br>
                    <strong>Amount</strong> ${L.mapbox.sanitize(g["Amount String"])}<br>
                    <strong>Awarded</strong> ${L.mapbox.sanitize(g["Award Date"])}
                `)
            );
        });

        // fit the map to the bounds of the marker
        map.fitBounds(markers.getBounds(), {maxZoom: 9});

        // layers that will be displayed in the data
        var overlays = {
            "Grants data": {
                "Grants": markers.addTo(map),
                'All charities (England and Wales)': L.mapbox.styleLayer('mapbox://styles/davidkane/ck36gljmp1tj11cmujpokrea1'),
            },
            "Overlay data": { 
                "No overlay": L.mapbox.featureLayer(null).addTo(map),
                'Deprivation (England - IMD2019 ranks)': L.mapbox.styleLayer('mapbox://styles/davidkane/ck309ufnq0rrx1csftj9515ze', deprivation_options),
                '- Income': L.mapbox.styleLayer('mapbox://styles/davidkane/ck35t6us210271cmlswr7ic2m', deprivation_options),
                '- Employment': L.mapbox.styleLayer('mapbox://styles/davidkane/ck30abu8r0b511cqjl7gnb835', deprivation_options),
                '- Education': L.mapbox.styleLayer('mapbox://styles/davidkane/ck30acrnp0s621coaemmp19rm', deprivation_options),
                '- Health': L.mapbox.styleLayer('mapbox://styles/davidkane/ck30afwq40s4p1claktbbm3gk', deprivation_options),
                '- Crime': L.mapbox.styleLayer('mapbox://styles/davidkane/ck35t8f1z03zg1cpiltsec9ep', deprivation_options),
                '- Barriers to Housing & Services': L.mapbox.styleLayer('mapbox://styles/davidkane/ck30agq740bah1co9csdf1yu5', deprivation_options),
                '- Living Environment': L.mapbox.styleLayer('mapbox://styles/davidkane/ck30ahvkn0be01dmu0r75ryvj', deprivation_options),
                '- Most deprived 20%': L.mapbox.styleLayer('mapbox://styles/davidkane/ck30nnfoj0mj61cpnxh7ijw06', deprivation_options),
            },
            "Boundaries": { 
                "No boundaries": L.mapbox.featureLayer(null).addTo(map),
                'Country and Region': L.mapbox.featureLayer(null, boundary_options({weight: 2}))
                    .loadURL('https://opendata.arcgis.com/datasets/01fd6b2d7600446d8af768005992f76a_3.geojson')
                    .bindPopup(boundary_name_field),
                'Local Authorities': L.layerGroup([
                    // Local Authority (lower tier)
                    L.mapbox.featureLayer(null, boundary_options({
                            fillOpacity: 0.05,
                            opacity: 0.3,
                            weight: 1
                        }))
                        .loadURL('https://opendata.arcgis.com/datasets/bbb0e58b0be64cc1a1460aa69e33678f_0.geojson')
                        .bindPopup(boundary_name_field),
                    // Local Authority (upper tier)
                    L.mapbox.featureLayer(null, boundary_options({
                            fill: false,
                            clickable: false,
                            opacity: 1,
                            weight: 1.5
                        }))
                        .loadURL('https://opendata.arcgis.com/datasets/c6e8170231034aaa92f4bc21ebf77aec_0.geojson'),
                ]).bindPopup(boundary_name_field),
                'Parliamentary Constituencies': L.mapbox.featureLayer(null, boundary_options())
                    .loadURL('https://opendata.arcgis.com/datasets/47e59e1e38ee4db0af18d57821bb4709_0.geojson')
                    .bindPopup(boundary_name_field),
                'Clinical Commissioning Groups (England)': L.mapbox.featureLayer(null, boundary_options())
                    .loadURL('https://opendata.arcgis.com/datasets/c3398f0560844f74b76ca4b4136eb6a3_3.geojson')
                    .bindPopup(boundary_name_field),
                'Local Enterprise Partnerships (England)': L.mapbox.featureLayer(null, boundary_options({
                        fillOpacity: 0.3
                    }))
                    .loadURL('https://opendata.arcgis.com/datasets/d4d519d1d1a1455a9b82331228f77489_3.geojson')
                    .bindPopup(boundary_name_field),
            }
        };

        // add the layer control
        L.control.groupedLayers({}, overlays, {
            exclusiveGroups: ["Overlay data", "Boundaries"],
            collapsed: true,
            hideSingleBase: true,
        }).addTo(map);

    </script>
</body>
</html>